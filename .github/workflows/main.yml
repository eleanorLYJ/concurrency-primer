name: generate-pdf-actions
on: [push]
jobs:
 concurrency-primer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      continue-on-error: true
    - name: install-texlive
      run: | 
        sudo apt-get install -q -y texlive-full texlive-latex-base
      shell: bash
    - uses: actions/setup-python@v5
      with:
          python-version: '3.10' 
    - name: install-pygments
      run: |
        python -m pip install --upgrade pip
        pip install pygments
    - name: make
      run: make
    - name: create Release
      id: create_Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Changes in this Release
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./concurrency-primer.pdf
        asset_name: concurrency-primer.pdf
        asset_content_type:  application/pdf 
    # - name: Upload to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: concurrency-primer.pdf
    #     asset_name: concurrency-primer.pdf
    #     overwrite: true
    #     body: "This is my release text"

    